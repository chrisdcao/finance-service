// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/transactions/get": {
            "get": {
                "description": "Get all transactions based on filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Get transactions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Wallet TransactionType",
                        "name": "walletType",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Action TransactionType",
                        "name": "actionType",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "DiffAmount",
                        "name": "amount",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "From Time (ms)",
                        "name": "fromTime",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "To Time (ms)",
                        "name": "toTime",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/wallets/convert_balance": {
            "post": {
                "description": "Transfer balance from one wallet to another",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wallets"
                ],
                "summary": "Convert wallet balance",
                "parameters": [
                    {
                        "description": "Convert Request",
                        "name": "convertRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.WalletTransferRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/wallets/update_balance": {
            "post": {
                "description": "Top up the balance of a wallet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wallets"
                ],
                "summary": "Top up wallet balance",
                "parameters": [
                    {
                        "description": "Topup Request",
                        "name": "topupRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.WalletUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.WalletTransferRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "externalFromWalletId": {
                    "type": "string"
                },
                "externalToWalletId": {
                    "type": "string"
                }
            }
        },
        "dto.WalletUpdateRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "content": {
                    "type": "string"
                },
                "externalWalletId": {
                    "type": "string"
                },
                "updateType": {
                    "type": "string"
                },
                "walletType": {
                    "type": "string"
                }
            }
        },
        "response.Response": {
            "type": "object",
            "properties": {
                "data": {},
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:3000",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Finance Service API",
	Description:      "This is a sample finance service.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
